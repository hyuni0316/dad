import { useEffect } from "react";
import PropTypes from "prop-types";
import Plotly from "plotly.js-dist";

const prepareResponseCorrelationData = (data) => {
  const responses = Object.keys(data);
  const zData = responses.map((response) =>
    responses.map((targetResponse) => data[response][targetResponse] || 0)
  );
  return { responses, zData };
};

const Chart1_9 = ({ scenario }) => {
  const tables = {
    Worst: {
        "미온적 반응": {
            "미온적 반응": 1.000000, "비판적 반응": 0.674038, "사례제시형 반응": 0.750882,
            "소극적 반응": 0.955773, "수용적 반응": 0.660347, "자기주도적 반응": 0.385164,
            "정보 제공형 반응": 0.959675
        },
        "비판적 반응": {
            "미온적 반응": 0.674038, "비판적 반응": 1.000000, "사례제시형 반응": 0.603810,
            "소극적 반응": 0.665559, "수용적 반응": 0.572270, "자기주도적 반응": 0.357143,
            "정보 제공형 반응": 0.782610
        },
        "사례제시형 반응": {
            "미온적 반응": 0.750882, "비판적 반응": 0.603810, "사례제시형 반응": 1.000000,
            "소극적 반응": 0.710284, "수용적 반응": 0.825016, "자기주도적 반응": -0.028084,
            "정보 제공형 반응": 0.818496
        },
        "소극적 반응": {
            "미온적 반응": 0.955773, "비판적 반응": 0.665559, "사례제시형 반응": 0.710284,
            "소극적 반응": 1.000000, "수용적 반응": 0.727276, "자기주도적 반응": 0.380319,
            "정보 제공형 반응": 0.907477
        },
        "수용적 반응": {
            "미온적 반응": 0.660347, "비판적 반응": 0.572270, "사례제시형 반응": 0.825016,
            "소극적 반응": 0.727276, "수용적 반응": 1.000000, "자기주도적 반응": 0.063586,
            "정보 제공형 반응": 0.749316
        },
        "자기주도적 반응": {
            "미온적 반응": 0.385164, "비판적 반응": 0.357143, "사례제시형 반응": -0.028084,
            "소극적 반응": 0.380319, "수용적 반응": 0.063586, "자기주도적 반응": 1.000000,
            "정보 제공형 반응": 0.313044
        },
        "정보 제공형 반응": {
            "미온적 반응": 0.959675, "비판적 반응": 0.782610, "사례제시형 반응": 0.818496,
            "소극적 반응": 0.907477, "수용적 반응": 0.749316, "자기주도적 반응": 0.313044,
            "정보 제공형 반응": 1.000000
        }
    },
    Normal: {
        "미온적 반응": {
            "미온적 반응": 1.000000, "비판적 반응": 0.669996, "사례제시형 반응": 0.844507,
            "소극적 반응": 0.805888, "수용적 반응": 0.700965, "자기주도적 반응": 0.894747,
            "정보 제공형 반응": 0.904281
        },
        "비판적 반응": {
            "미온적 반응": 0.669996, "비판적 반응": 1.000000, "사례제시형 반응": 0.697573,
            "소극적 반응": 0.728294, "수용적 반응": 0.425725, "자기주도적 반응": 0.771947,
            "정보 제공형 반응": 0.660487
        },
        "사례제시형 반응": {
            "미온적 반응": 0.844507, "비판적 반응": 0.697573, "사례제시형 반응": 1.000000,
            "소극적 반응": 0.927943, "수용적 반응": 0.876190, "자기주도적 반응": 0.726190,
            "정보 제공형 반응": 0.876650
        },
        "소극적 반응": {
            "미온적 반응": 0.805888, "비판적 반응": 0.728294, "사례제시형 반응": 0.927943,
            "소극적 반응": 1.000000, "수용적 반응": 0.804373, "자기주도적 반응": 0.804373,
            "정보 제공형 반응": 0.899543
        },
        "수용적 반응": {
            "미온적 반응": 0.700965, "비판적 반응": 0.425725, "사례제시형 반응": 0.876190,
            "소극적 반응": 0.804373, "수용적 반응": 1.000000, "자기주도적 반응": 0.592857,
            "정보 제공형 반응": 0.857998
        },
        "자기주도적 반응": {
            "미온적 반응": 0.894747, "비판적 반응": 0.771947, "사례제시형 반응": 0.726190,
            "소극적 반응": 0.804373, "수용적 반응": 0.592857, "자기주도적 반응": 1.000000,
            "정보 제공형 반응": 0.899965
        },
        "정보 제공형 반응": {
            "미온적 반응": 0.904281, "비판적 반응": 0.660487, "사례제시형 반응": 0.876650,
            "소극적 반응": 0.899543, "수용적 반응": 0.857998, "자기주도적 반응": 0.899965,
            "정보 제공형 반응": 1.000000
        }
    },
    Best: {
        "미온적 반응": {
            "미온적 반응": 1.000000, "비판적 반응": 0.401980, "사례제시형 반응": 0.822387,
            "소극적 반응": 0.750940, "수용적 반응": 0.694443, "자기주도적 반응": 0.658545,
            "정보 제공형 반응": 0.557908
        },
        "비판적 반응": {
            "미온적 반응": 0.401980, "비판적 반응": 1.000000, "사례제시형 반응": 0.267821,
            "소극적 반응": 0.591932, "수용적 반응": 0.556273, "자기주도적 반응": 0.340017,
            "정보 제공형 반응": 0.463561
        },
        "사례제시형 반응": {
            "미온적 반응": 0.822387, "비판적 반응": 0.267821, "사례제시형 반응": 1.000000,
            "소극적 반응": 0.516791, "수용적 반응": 0.453077, "자기주도적 반응": 0.555915,
            "정보 제공형 반응": 0.481395
        },
        "소극적 반응": {
            "미온적 반응": 0.750940, "비판적 반응": 0.591932, "사례제시형 반응": 0.516791,
            "소극적 반응": 1.000000, "수용적 반응": 0.940639, "자기주도적 반응": 0.777966,
            "정보 제공형 반응": 0.858447
        },
        "수용적 반응": {
            "미온적 반응": 0.694443, "비판적 반응": 0.556273, "사례제시형 반응": 0.453077,
            "소극적 반응": 0.940639, "수용적 반응": 1.000000, "자기주도적 반응": 0.674717,
            "정보 제공형 반응": 0.764840
        },
        "자기주도적 반응": {
            "미온적 반응": 0.658545, "비판적 반응": 0.340017, "사례제시형 반응": 0.555915,
            "소극적 반응": 0.777966, "수용적 반응": 0.674717, "자기주도적 반응": 1.000000,
            "정보 제공형 반응": 0.715536
        },
        "정보 제공형 반응": {
            "미온적 반응": 0.557908, "비판적 반응": 0.463561, "사례제시형 반응": 0.481395,
            "소극적 반응": 0.858447, "수용적 반응": 0.764840, "자기주도적 반응": 0.715536,
            "정보 제공형 반응": 1.000000
        }
    }
  };

  useEffect(() => {
    ["Best", "Normal", "Worst"].forEach((scenarioType) => {
      const { responses, zData } = prepareResponseCorrelationData(tables[scenarioType]);
      // const isHighlighted = scenarioType === scenario;

      const data = [
        {
          z: zData,
          x: responses,
          y: responses,
          type: "heatmap",
          hoverongaps: false,
          colorscale: [
            [0, "EBE378"], // 낮은 값
            [0.5, "EBACD4"], // 중간 값
            [1, "E44CAC"], // 높은 값
          ],
          // opacity: isHighlighted ? 1 : 0.4, // 선택된 시나리오 강조
        },
      ];

      const layout = {
        title: {
          text: `${scenarioType} Scenario - Response Correlation`,
          font: { size: 14 },
        },
        xaxis: {
          title: "Responses",
          titlefont: { size: 12 },
          tickfont: { size: 10 },
        },
        yaxis: {
          title: "Responses",
          titlefont: { size: 12 },
          tickfont: { size: 10 },
        },
        margin: { t: 50, l: 150, r: 20, b: 80 },
        paper_bgcolor: "rgba(0,0,0,0)",
        plot_bgcolor: "rgba(0,0,0,0)",
      };

      Plotly.newPlot(`response-correlation-heatmap-${scenarioType}`, data, layout);
    });
  }, [scenario]);

  return (
    <div style={{ display: "flex", flexDirection: "column", gap: "20px" }}>
      {["Best", "Normal", "Worst"].map((scenarioType, index) => (
        <div
          key={index}
          id={`response-correlation-heatmap-${scenarioType}`}
          style={{ width: "600px", height: "500px" }}
        />
      ))}
    </div>
  );
};

Chart1_9.propTypes = {
  scenario: PropTypes.oneOf(["Best", "Normal", "Worst"]).isRequired,
};

export default Chart1_9;
